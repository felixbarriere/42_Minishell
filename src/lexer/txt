void	tokenizer(t_sh *sh)
{
	char	*str;
	char	*str_wip = NULL;
	char	*key;
	char	*value;
	int		i;
	char	**split;
	int	j;

	i = 0;
	j = 0;

	if (sh->state_quote == DEFAULT && is_in_charset(sh->prompt[sh->p_index]))
	{
		if (sh->prompt[sh->p_index] == PIPE)
			sh->token_lst = add_back_token(sh->token_lst, PIPE, "|");
		else
			process_redirect_token(sh);
	}
	// Si $USER
	else if ((sh->state_quote == DOUBLE || sh->state_quote == DEFAULT ) 
			&& sh->prompt[sh->p_index] == '$')
	{
		key = get_key_dollar(sh->prompt, sh->p_index);
		sh->p_index = sh->p_index + ft_strlen(key) - 1;
		value = get_value_dollar(sh, key);
		sh->token_lst = add_back_token(sh->token_lst, STR, value);
	}
	else 
	{
		str = string_token(sh, &sh->prompt[sh->p_index]);
		// Si la str commence par des doubles quotes
		if (str[0] == '\"' && contains_$(str) == SUCCESS)
		{
			str = dollar_in_quote(str, sh, 34);
			if (!is_only_space(str))
			sh->token_lst = add_back_token(sh->token_lst, STR, str);
		}
		// Si la str commence par des singles quotes, on les enleve et on garde les doubles
		else if (str[0] == '\'')
		{
			i = 0;
			while (str[i] != '\0')
			{
				str_wip = ft_strjoin_char(str_wip, str[i], 39);
				i++;
			}
			if (!is_only_space(str))
				sh->token_lst = add_back_token(sh->token_lst, STR, str_wip);
		}
		// Si la str contient d'abord un ' et un $'
		else if (contains_first_squote(str) == SUCCESS && contains_$(str) == SUCCESS)
		{
				split = ft_split(str, '\'');
				while (split[j] != (void *)0)
				{
					printf("STR %d = %s\n",j, split[j]);
					j++;
				}
				j = 0;
				while (split[j] != (void *)0)
				{
				
					if (contains_$(split[j]))
					{
						printf("ICI\n");
						str = dollar_in_quote(str, sh, 39);
						if (!is_only_space(str))
							sh->token_lst = add_back_token(sh->token_lst, STR, str);
					}
					else
					{
						printf("LA\n");
						if (!is_only_space(str))
							sh->token_lst = add_back_token(sh->token_lst, STR, str);
						
					}
					j++;
				}
	
		}
		
		// Si la str contient un ' sans espace, on enleve les singles et on garde les doubles
		// exemple hello'hola"que tal"' devient hellohola"que tal"
		else if (contains_first_squote(str) == SUCCESS)
		{
			i = 0;
			while (str[i] != '\0')
			{
				str_wip = ft_strjoin_char(str_wip, str[i], 39);
				i++;
			}
			if (!is_only_space(str))
				sh->token_lst = add_back_token(sh->token_lst, STR, str_wip);
		}
		// Si la str contient un $ sans espace, exemple : hello$USER
		else if (contains_$(str) == SUCCESS)
		{
			str = dollar_in_quote(str, sh, 34);
			if (!is_only_space(str))
			sh->token_lst = add_back_token(sh->token_lst, STR, str);
		}
		// Si la str contient des doubles quotes sans espace, exemple : hello"hola"
		else if (contains_quotes(str)  == SUCCESS)
		{
			i = 0;
			while (str[i] != '\0')
			{
				str_wip = ft_strjoin_char(str_wip, str[i], 34);
				i++;
			}
			if (!is_only_space(str))
				sh->token_lst = add_back_token(sh->token_lst, STR, str_wip);
		}
		// Si la str est simple
		else
		{
			if (!is_only_space(str))
			sh->token_lst = add_back_token(sh->token_lst, STR, str);
		}
	
		
	}
}